from datetime import datetime, timedelta

from django import forms
from django.shortcuts import render

from comments.models import Comment
from notifications.telegram.posts import notify_post_collectible_tag_owners
from posts.models.linked import LinkedPost
from posts.models.post import Post


class PostFeedsForm(forms.Form):
    move_up = forms.BooleanField(
        label="–ü–æ–¥–±—Ä–æ—Å–∏—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω–æ–π",
        required=False
    )

    move_down = forms.BooleanField(
        label="–û–ø—É—Å—Ç–∏—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω–æ–π",
        required=False
    )

    re_ping_collectible_tag_owners = forms.BooleanField(
        label="–ü–µ—Ä–µ–ø–∏–Ω–≥–∞–Ω—É—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–µ–≥–∞",
        required=False,
    )

    refresh_linked = forms.BooleanField(
        label="–û–±–Ω–æ–≤–∏—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã",
        required=False,
    )



def get_feeds_action(request, post: Post, **context):
    return render(request, "godmode/action.html", {
        **context,
        "item": post,
        "form": PostFeedsForm(),
    })


def post_feeds_action(request, post: Post, **context):
    form = PostFeedsForm(request.POST, request.FILES)
    if form.is_valid():
        data = form.cleaned_data

        # Moving up
        if data["move_up"]:
            post.last_activity_at = datetime.utcnow()
            post.save()

        # Moving down
        if data["move_down"]:
            post.last_activity_at -= timedelta(days=3)
            post.save()

        # Ping collectible tag owners again
        if data["re_ping_collectible_tag_owners"]:
            if post.collectible_tag_code:
                notify_post_collectible_tag_owners(post)

        # Refresh linked posts
        if data["refresh_linked"]:
            LinkedPost.create_links_from_text(post, post.text)
            post_comments = Comment.visible_objects().filter(post=post, is_deleted=False)
            for comment in post_comments:
                LinkedPost.create_links_from_text(comment.post, comment.text)

        return render(request, "godmode/message.html", {
            **context,
            "title": f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—Å—Ç–∞ ¬´{post.title}¬ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã",
            "message": f"–£—Ä–∞ üéâ",
        })
    else:
        return render(request, "godmode/action.html", {
            **context,
            "item": post,
            "form": form,
        })

